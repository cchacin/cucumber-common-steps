{"name":"Cucumber Common Steps","tagline":"This project is an intent to provide common steps definitions to make functional testing for REST API, Database setup, external service mocks, redis setup/assertions and HTML pages","body":"[![Build Status](https://travis-ci.org/cchacin/cucumber-common-steps.svg?branch=master)](https://travis-ci.org/cchacin/cucumber-common-steps.svg?branch=master)\r\n[![Coverage Status](https://img.shields.io/coveralls/cchacin/cucumber-common-steps.svg)](https://coveralls.io/r/cchacin/cucumber-common-steps?branch=master)\r\n[![Stories in Ready](https://badge.waffle.io/cchacin/cucumber-common-steps.svg?label=ready&title=Ready)](http://waffle.io/cchacin/cucumber-common-steps)\r\n[![Dependency Status](https://www.versioneye.com/user/projects/5407630bccc023c90d000098/badge.svg)](https://www.versioneye.com/user/projects/5407630bccc023c90d000098)\r\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.cchacin/cucumber-common-steps/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.github.cchacin/cucumber-common-steps)\r\n\r\n# Cucumber Common Steps\r\n\r\nThis project is an intent to provide common steps definitions to make functional testing for REST API, Database setup, external service mocks, redis setup/assertions and HTML pages\r\n\r\nThis is based on [cucumber-jvm](https://github.com/cucumber/cucumber-jvm) project.\r\n\r\nYou need to specify your features in the gherkin language and run it with [cucumber-java](https://github.com/cucumber/cucumber-java-skeleton) or [cukespace](https://github.com/cukespace/cukespace) + [arquillian](http://arquillian.org/)\r\n\r\n* [Cucumber Common Steps] (#cucumber-common-steps)\r\n  * [Dependency](#dependency)\r\n  * [Call Restful APIs and assert Responses](#call-restful-apis-and-assert-responses)\r\n  * [Mock externals API calls](#mock-externals-api-calls)\r\n  * [Redis assertions and setup] (#redis-assertions-and-setup)\r\n  * [Run the cucumber tests](#run-the-cucumber-tests)\r\n\r\n## Dependency\r\n\r\n**Add as dependency in your pom.xml:**\r\n\r\n```xml\r\n<dependency>\r\n    <groupId>com.github.cchacin</groupId>\r\n    <artifactId>cucumber-common-steps</artifactId>\r\n    <version>${version}</version>\r\n    <scope>test</scope>\r\n</dependency>\r\n```\r\n\r\n## Database Setup\r\n**Steps for Database Setup and verification of Endpoints Results**\r\n\r\nPut your database connection properties in ```src/test/resources/test-db.properties```\r\n\r\n```properties\r\ndatabase.url=jdbc:hsqldb:mem:test\r\ndatabase.driver=org.hsqldb.jdbcDriver\r\ndatabase.user=SA\r\ndatabase.password=\r\n```\r\n\r\nWrite your feature in gherkin language in ```src/test/resources/features/example.feature```\r\n\r\n*it should be used in ```Given``` steps to prepare the database*\r\n\r\n```gherkin\r\n  Scenario: Retrieve users list\r\n    Given I have only the following rows in the \"models\" table:\r\n      | id | created             | modified            | email                | fullname | password |\r\n      | 1  | 2014-07-16 00:00:00 | 2014-07-16 00:00:00 | cchacin@superbiz.org | Carlos   | passw0rd |\r\n    When I make a GET call to \"/users\" endpoint\r\n    Then response status code should be \"200\"\r\n    And response content type should be \"application/json\"\r\n    And response should be json:\r\n    \"\"\"\r\n    {\r\n      \"model\":\r\n        [\r\n          {\r\n              \"id\": 1,\r\n              \"created\": \"${json-unit.ignore}\",\r\n              \"modified\": \"${json-unit.ignore}\",\r\n              \"email\": \"cchacin@superbiz.org\",\r\n              \"fullname\": \"Carlos\",\r\n              \"password\": \"passw0rd\"\r\n          }\r\n        ]\r\n    }\r\n    \"\"\"\r\n\r\n  Scenario: Retrieve users list\r\n    Given I have the following rows in the \"models\" table:\r\n      | id | created             | modified            | email                 | fullname | password |\r\n      | 2  | 2015-02-11 00:00:00 | 2015-02-11 00:00:00 | cchacin2@superbiz.org | Carlos2  | passw0rd |\r\n    When I make a GET call to \"/users\" endpoint\r\n    Then response status code should be \"200\"\r\n    And response content type should be \"application/json\"\r\n    And response should be json:\r\n    \"\"\"\r\n    {\r\n      \"model\":\r\n        [\r\n          {\r\n              \"id\": 1,\r\n              \"created\": \"${json-unit.ignore}\",\r\n              \"modified\": \"${json-unit.ignore}\",\r\n              \"email\": \"cchacin@superbiz.org\",\r\n              \"fullname\": \"Carlos\",\r\n              \"password\": \"passw0rd\"\r\n          },\r\n          {\r\n              \"id\": 2,\r\n              \"created\": \"${json-unit.ignore}\",\r\n              \"modified\": \"${json-unit.ignore}\",\r\n              \"email\": \"cchacin2@superbiz.org\",\r\n              \"fullname\": \"Carlos2\",\r\n              \"password\": \"passw0rd\"\r\n          }\r\n        ]\r\n    }\r\n    \"\"\"\r\n```\r\n\r\n## Call Restful APIs and assert Responses\r\n**Steps to verify Restful API reponses**\r\n\r\n```gherkin\r\n  Scenario:\r\n    When I make a GET call to \"https://api.github.com/zen?z=1\" endpoint\r\n    Then response status code should be \"200\"\r\n    And response content type should be \"text/plain;charset=utf-8\"\r\n\r\n  Scenario:\r\n    When I make a GET call to \"/successful/get\" endpoint\r\n    Then response status code should be \"200\"\r\n    And response content type should be \"application/json\"\r\n    And response header \"a\" should be \"a\";\r\n    And response should be json in file \"/responses/successful.json\"\r\n\r\n  Scenario:\r\n    When I make a GET call to \"/successful/get/csv\" endpoint\r\n    Then response status code should be \"200\"\r\n    And response content type should be \"text/csv\"\r\n    And response should be file \"/responses/sample.csv\"\r\n\r\n  Scenario:\r\n    When I make a GET call to \"/successful/get\" endpoint with header \"Authorization\" with value \"OAuth qwerqweqrqwerqwer\"\r\n    Then response status code should be \"200\"\r\n    And response content type should be \"application/json\"\r\n    And response header \"a\" should be \"a\";\r\n    And response should be json in file \"/responses/successful.json\"\r\n\r\n  Scenario:\r\n    When I make a GET call to \"/successful/get\" endpoint with headers:\r\n      | headerName    | headerValue             |\r\n      | Authorization | OAuth qwerqweqrqwerqwer |\r\n    Then response status code should be \"200\"\r\n    And response content type should be \"application/json\"\r\n    And response header \"a\" should be \"a\";\r\n    And response should be json in file \"/responses/successful.json\"\r\n\r\n  Scenario:\r\n    When I make a GET call to \"/successful/get\" endpoint\r\n    Then response status code should be \"200\"\r\n    And response content type should be \"application/json\"\r\n    And response header \"a\" should be \"a\";\r\n    And response should be json:\r\n    \"\"\"\r\n    {\r\n      \"id\": \"${json-unit.ignore}\",\r\n      \"created\": \"${json-unit.ignore}\",\r\n      \"modified\": \"${json-unit.ignore}\",\r\n      \"password\": \"\",\r\n      \"fullname\": \"\"\r\n    }\r\n    \"\"\"\r\n    \r\n  Scenario:\r\n    When I make a HEAD call to \"/successful/head\" endpoint\r\n    Then response status code should be \"204\"\r\n    And response should be empty\r\n\r\n  Scenario:\r\n    When I make a PUT call to \"/successful/put\" endpoint with post body:\r\n    \"\"\"\r\n    {\r\n    }\r\n    \"\"\"\r\n    Then response status code should be \"204\"\r\n    And response should be empty\r\n  \r\n  Scenario: PUT call with headers\r\n    When I make a PUT call to \"/test-app/successful/headers/put\" endpoint with post body in file \"/requests/post_request.json\" and headers:\r\n      | Content-Type | application/json |\r\n    Then response status code should be 204\r\n    And response should be empty\r\n\r\n  Scenario:\r\n    When I make a POST call to \"/successful/post\" endpoint with post body:\r\n    \"\"\"\r\n    {\r\n    }\r\n    \"\"\"\r\n    Then response status code should be \"201\"\r\n    And response should be empty\r\n  \r\n  Scenario: POST call with headers\r\n    When I make a POST call to \"/test-app/successful/headers/post\" endpoint with post body in file \"/requests/post_request.json\" and headers:\r\n      | Content-Type | application/json |\r\n    Then response status code should be 201\r\n    And response should be empty\r\n\r\n  Scenario:\r\n    When I make a POST call to \"/successful/post\" endpoint with post body in file \"/requests/post_request.json\"\r\n    Then response status code should be \"201\"\r\n    And response should be empty\r\n\r\n  Scenario:\r\n    When I make a DELETE call to \"/successful/delete\" endpoint\r\n    Then response status code should be \"204\"\r\n    And response should be empty\r\n```\r\n\r\n\r\n## Mock externals API calls\r\n\r\n```gherkin\r\n  Scenario: Mock external API\r\n    Given The call to external service should be:\r\n      | method | url            | statusCode |\r\n      | GET    | /user/71e7cb11 | 200        |\r\n      | POST   | /user          | 201        |\r\n      | PUT    | /user/71e7cb11 | 204        |\r\n      | DELETE | /user/71e7cb11 | 204        |\r\n    When I make a GET call to \"/external/call/user/71e7cb11\" endpoint\r\n    Then response status code should be \"200\"\r\n    And response should be json:\r\n    \"\"\"\r\n    {\r\n      \"responses\": [\r\n        {\r\n          \"status\": 200\r\n        },\r\n        {\r\n          \"status\": 201\r\n        },\r\n        {\r\n          \"status\": 204\r\n        },\r\n        {\r\n          \"status\": 204\r\n        }\r\n      ]\r\n    }\r\n    \"\"\"\r\n```\r\n\r\nAnd then put the payloads (convention over configuration) in ```src/test/resources/restito```: i.e. ```get.user.71e7cb11.json```\r\n\r\n```json\r\n{\r\n    \"sample\": 21\r\n}\r\n```\r\n\r\n## Redis assertions and setup\r\n\r\n```gherkin\r\nScenario: Redis Steps for Key/Value\r\n  Given I have the redis key \"key1\" with value \"value1\"\r\n  Given I have the redis key \"key2\" with value in file \"responses/value2.text\"\r\n  Given I have the redis key \"key3\" with value:\r\n  \"\"\"\r\n  value3\r\n\r\n  \"\"\"\r\n  Given I have the redis key \"key4\" with value \"value4\" with ttl 5 seconds\r\n  Then the redis key \"key4\" should be \"value4\"\r\n  Then the redis key \"key3\" should exists\r\n  Then the redis keys \"key1,key2,key3\" should exists\r\n  Then the redis keys should exists:\r\n    | key1 |\r\n    | key2 |\r\n    | key3 |\r\n  Then the redis key \"key4\" should not exists after 6 seconds\r\n  Then the redis key \"key4\" should not exists\r\n  Then the redis keys \"key100,key200,key300\" should not exists\r\n  Then the redis key \"key1\" should be \"value1\"\r\n  Then the redis key \"key2\" should be:\r\n  \"\"\"\r\n  value2\r\n\r\n  \"\"\"\r\n  Then the redis key \"key3\" should be file \"responses/value3.text\"\r\n\r\nScenario: Redis Steps for Lists\r\n  Given I have the redis list \"list1\" with values \"value1\"\r\n  Given I have the redis list \"list2\" with values in file \"responses/list2.text\"\r\n  Given I have the redis list \"list3\" with values:\r\n    | value3   |\r\n    | value33  |\r\n    | value333 |\r\n  Given I have the redis list \"list4\" with values \"value4\" with ttl 5 seconds\r\n  Given I have the redis list \"list5\" with values \"value5,value55,value555\" with ttl 5 seconds\r\n  Then the redis list \"list4\" should be \"value4\"\r\n  Then the redis list \"list5\" should be \"value5,value55,value555\"\r\n  Given I have the redis list \"list6\" with values \"value6,value66,value666\"\r\n  Then the redis list \"list6\" should be:\r\n    | value6   |\r\n    | value66  |\r\n    | value666 |\r\n  Then the redis list \"list3\" should exists\r\n  Then the redis lists \"list1,list2,list3\" should exists\r\n  Then the redis lists should exists:\r\n    | list1 |\r\n    | list2 |\r\n    | list3 |\r\n  Then the redis list \"list5\" should not exists after 6 seconds\r\n  Then the redis list \"list4\" should not exists\r\n  Then the redis lists \"list100,list200,list300\" should not exists\r\n  Given I have the redis list \"list7\" with values \"value7,value77,value777\"\r\n  Then the redis list \"list7\" should be file \"responses/list7.text\"\r\n\r\nScenario: Redis Steps for Cleaning Database\r\n  Given I have the redis key \"key\" in the db 8 with value \"value\"\r\n  Then I have the redis key \"key\" in the db 8 with value \"value\"\r\n  Given I have cleaned redis db 8\r\n  Then the redis key \"key\" in the db 8 should not exists\r\n\r\nScenario: Redis Steps for Cleaning All Databases\r\n  Given I have the redis key \"key\" in the db 0 with value \"value\"\r\n  And I have the redis key \"key\" in the db 3 with value \"value\"\r\n  And I have the redis key \"key\" in the db 7 with value \"value\"\r\n  Then I have the redis key \"key\" in the db 0 with value \"value\"\r\n  And I have the redis key \"key\" in the db 3 with value \"value\"\r\n  And I have the redis key \"key\" in the db 7 with value \"value\"\r\n  Given I have cleaned redis\r\n  Then the redis key \"key\" in the db 0 should not exists\r\n  And the redis key \"key\" in the db 3 should not exists\r\n  And the redis key \"key\" in the db 7 should not exists\r\n\r\n```\r\n\r\n\r\n## Database assertions\r\nYou need to put your database connection properties in ```src/test/resources/test-db.properties```\r\n\r\n```properties\r\ndatabase.url=jdbc:mysql://localhost/myapp_test\r\ndatabase.driver=com.mysql.jdbc.Driver\r\ndatabase.user=root\r\ndatabase.password=\r\n```\r\nWrite your feature in gherkin language in ```src/test/resources/features/example.feature```\r\n\r\n*it should be used in ```Then``` steps to check the database*\r\n\r\n```gherkin\r\nScenario: Database check exists\r\n    Given I have only the following rows in the \"models\" table:\r\n      | id | created             | modified            | email                 | fullname | password |\r\n      | 4  | 2015-02-11 00:00:00 | 2015-02-11 00:00:00 | cchacin2@superbiz.org | Carlos2  | passw0rd |\r\n      | 5  | 2015-02-11 00:00:00 | 2015-02-11 00:00:00 | cchacin3@superbiz.org | Carlos3  | passw0rd |\r\n    Then I should have the following rows in the \"models\" table:\r\n      | id | created             | modified            | email                 | fullname | password |\r\n      | 4  | 2015-02-11 00:00:00 | 2015-02-11 00:00:00 | cchacin2@superbiz.org | Carlos2  | passw0rd |\r\n      | 5  | 2015-02-11 00:00:00 | 2015-02-11 00:00:00 | cchacin3@superbiz.org | Carlos3  | passw0rd |\r\n\r\n```\r\n\r\n## Run the cucumber tests\r\n\r\n**Write a cucumber integration-test in ```src/test/java```:**\r\n\r\n```java\r\nimport org.junit.runner.RunWith;\r\n\r\nimport cucumber.api.CucumberOptions;\r\nimport cucumber.api.junit.Cucumber;\r\n\r\n@RunWith(Cucumber.class)\r\n@CucumberOptions(\r\n        features = {\r\n                \"casspath:features\"\r\n        },\r\n        glue = {\r\n                \"com.github.cchacin.cucumber.steps\"\r\n        },\r\n        format = {\r\n                \"pretty\"\r\n        }\r\n)\r\npublic class MyCucumberStory {\r\n}\r\n```\r\n","google":" UA-4142851-5","note":"Don't delete this file! It's used internally to help with page regeneration."}